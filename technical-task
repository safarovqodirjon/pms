
1. Необходимо разработать систему с веб-интерфейсом на основе Django.

2. В системе должно быть три типа пользователей: менеджеры, сотрудники и администраторы.

3. Для регистрации в системе администраторы должны использовать стандартный метод createsuperuser, а сотрудники и менеджеры должны отправить свои данные через форму, которая будет содержать следующие поля: имя, фамилия, имя пользователя (username), адрес электронной почты (email) и дополнительное поле "роль", которое позволит определить их роль в системе (менеджер или сотрудник). Только после того, как администратор примет их заявки на регистрацию, они смогут войти в систему.

4. Администратор должен иметь возможность создавать проекты и назначать на них менеджеров из списка зарегистрированных пользователей. После этого менеджеры могут создавать задачи внутри проекта и назначать на них сотрудников, а также устанавливать дедлайн и степень важности каждой задачи.

5. Сотрудники могут просматривать список задач, которые им назначил менеджер, и изменять статус своих задач, если они завершили работу над ними. После изменения статуса задачи, сотрудник может отправить ее на проверку менеджеру. Менеджер может проверить выполнение задачи конкретным сотрудником и отметить ее как завершенную или незавершенную, а также поставить оценку сотруднику. Кроме того, менеджер может оценивать работу сотрудников перед отправкой задач на рассмотрение администратору.

6. По завершении выполнения всех задач менеджер может отправить проект на рассмотрение администратору для оценки. Администратор получит уведомление об этом и сможет оценить проект, а также оставить фидбек.

7. Администратор может просматривать список всех проектов и их статусы выполнения, а также фиксировать прогресс в каждом проекте. Он может просматривать оценки, выставленные менеджерами сотрудникам, и выставлять свои оценки для сотрудника и менеджера.

8. Система должна быть защищена от несанкционированного доступа. Должны быть предусмотрены ограничения на доступ к данным и функционалу в зависимости от роли пользователя. Кроме того, каждая задача, которую дает менеджер сотрудникам, должна содержать дедлайн и степень важности.





                <div class="todo">
                    <div class="head">
                        <h3>Топ сотрудники</h3>
                        <i class='bx bx-plus'></i>
                        <i class='bx bx-filter'></i>
                    </div>
                    <ul class="todo-list">
                        {% for emp in employees %}
                            <li class="not-completed">
                                <p>{{ emp.last_name }} {{ emp.first_name }}</p>
                                <i class='bx bx-dots-vertical-rounded'></i>
                            </li>
                        {% endfor %}

                    </ul>
                </div>
